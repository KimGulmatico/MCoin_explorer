{"version":3,"file":"4.b06c3494a2c20fa3a942.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport Router from 'next/router'\r\nimport {Button, Icon, Label, Menu, Table, Input } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\n\r\nexport default class extends React.Component { \r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { \r\n      blocks: [], \r\n      transactions: [],\r\n      page:10,\r\n      index: null,\r\n    }\r\n    this.getAllBlocks = this.getAllBlocks.bind(this);\r\n    \r\n  }\r\n\r\n  // handling escape close\r\n  componentDidMount () {\r\n   this.getAllBlocks();\r\n   this.getBlocksTransactions();\r\n  }\r\n\r\n  componentWillUnmount () {\r\n   \r\n  }\r\n\r\n  async getAllBlocks() {\r\n      const response = await axios.get('http://localhost:3001/blocks/');\r\n      if(response){\r\n      //console.log(response.data);\r\n      this.setState({\r\n        blocks: response.data,\r\n      })\r\n      console.log(this.state.blocks[0]);\r\n      console.log(this.state.blocks[0].index);\r\n      }     \r\n  }\r\n\r\n  async getBlocksTransactions() {\r\n      const response = await axios.get('http://localhost:3001/blocks/'+this.state.index);\r\n      if(response){\r\n      //console.log(response.data);\r\n      this.setState({\r\n        transactions: response.data,\r\n      })\r\n      }     \r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    let allblocks = (<Table celled>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell>Index</Table.HeaderCell>\r\n                          <Table.HeaderCell>Transactions</Table.HeaderCell>\r\n                          <Table.HeaderCell>Difficulty</Table.HeaderCell>\r\n                          <Table.HeaderCell>MinedBy</Table.HeaderCell>\r\n                          <Table.HeaderCell>BlockDataHash</Table.HeaderCell>\r\n                          <Table.HeaderCell>Nonce</Table.HeaderCell>\r\n                          <Table.HeaderCell>Date Created</Table.HeaderCell>\r\n                          <Table.HeaderCell>BlockHash</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                      {\r\n                        this.state.blocks.map((block) => \r\n                          (parseInt(block.index) <= this.state.page)?\r\n                            <Table.Row key={block}>\r\n                              <Table.Cell>{block.index}</Table.Cell>\r\n                              <Table.Cell><p style={{color: '#3498db'}} onClick={()=>this.setState({index: block.index})}>{block.transactions.length}</p></Table.Cell>\r\n                              <Table.Cell>{block.difficulty}</Table.Cell>\r\n                              <Table.Cell>{block.minedBy}</Table.Cell>\r\n                              <Table.Cell>{block.blockDataHash}</Table.Cell>\r\n                              <Table.Cell>{block.nonce}</Table.Cell>\r\n                              <Table.Cell>{block.dateCreated}</Table.Cell>\r\n                              <Table.Cell>{block.blockHash}</Table.Cell>\r\n                            </Table.Row>\r\n                            :null)\r\n                      }\r\n                      </Table.Body>\r\n                      <Table.Footer>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan='8'>\r\n                            <Menu floated='right' pagination>\r\n                              <Menu.Item as='a' icon>\r\n                                <Icon name='chevron left' />\r\n                              </Menu.Item>\r\n                              <Menu.Item as='a'>1</Menu.Item>\r\n                              {\r\n                              this.state.blocks.map((block) => {\r\n                                if(parseInt(block.index) == this.state.page){\r\n                                  <Menu.Item as='a'>{block.index + 1}</Menu.Item>\r\n                                  //this.setState({page: this.state.page+10})\r\n                                }\r\n                                null\r\n                              })\r\n                              }\r\n                              <Menu.Item as='a' icon>\r\n                                <Icon name='chevron right' />\r\n                              </Menu.Item>\r\n                            </Menu>\r\n                          </Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Footer>\r\n                    </Table>);\r\n\r\n    let transactions = (<Table celled>\r\n                          <Table.Header>\r\n                            <Table.Row>\r\n                              <Table.HeaderCell>From</Table.HeaderCell>\r\n                              <Table.HeaderCell>To</Table.HeaderCell>\r\n                              <Table.HeaderCell>Value</Table.HeaderCell>\r\n                              <Table.HeaderCell>Fee</Table.HeaderCell>\r\n                              <Table.HeaderCell>Date created</Table.HeaderCell>\r\n                              <Table.HeaderCell>Data</Table.HeaderCell>\r\n                              <Table.HeaderCell>Sender public key</Table.HeaderCell>\r\n                              <Table.HeaderCell>Status</Table.HeaderCell>\r\n                              <Table.HeaderCell>Data hash</Table.HeaderCell>\r\n                            </Table.Row>\r\n                          </Table.Header>\r\n                          <Table.Body>\r\n                          {\r\n                            this.state.transactions.map((trans) => \r\n                                <Table.Row key={trans}>\r\n                                  <Table.Cell>{trans.from}</Table.Cell>\r\n                                  <Table.Cell>{trans.to}</Table.Cell>\r\n                                  <Table.Cell>{trans.value}</Table.Cell>\r\n                                  <Table.Cell>{trans.fee}</Table.Cell>\r\n                                  <Table.Cell>{trans.dateCreated}</Table.Cell>\r\n                                  <Table.Cell>{trans.data}</Table.Cell>\r\n                                  <Table.Cell>{trans.senderPubKey}</Table.Cell>\r\n                                  <Table.Cell>{trans.transferSuccessful}</Table.Cell>\r\n                                  <Table.Cell>{trans.transactionDataHash}</Table.Cell>\r\n                                </Table.Row>)\r\n                          }\r\n                          </Table.Body>                      \r\n                        </Table>);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" crossOrigin=\"anonymous\"/>\r\n\t\t    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\" integrity=\"sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp\" crossOrigin=\"anonymous\"/>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Baloo+Chettan|Paytone+One\" rel=\"stylesheet\"/>\r\n        <div className=\"container\" style={{'max-width': '97%'}}>\r\n        <div className=\"row\" style={{'margin-top': '14px'}}>\r\n          <div className=\"col-sm-6\">\r\n          <div style={{height: '6px'}}>\r\n          </div>\r\n          <span style={{'font-family': 'Paytone One', 'font-size': '40px', 'height': '200px'}}>Mccoin Explorer</span>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"container\" style={{'margin-right': '0'}}>\r\n            <div className=\"row\">\r\n            <div className=\"col-9\">\r\n            <Input fluid placeholder='Search...' />\r\n            </div>\r\n            <div className=\"col-3\" style={{'padding': '0'}}>\r\n            <Button secondary style={{'width': '100%'}}>Search</Button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {allblocks}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AAUA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;;;;;;;;;;;;;AAKA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAeivKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}